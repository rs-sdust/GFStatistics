<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBack.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QA/wD/AP+gvaeTAAAAJXRFWHRk
        YXRlOmNyZWF0ZQAyMDE1LTA3LTI1VDIxOjQ5OjMwKzA4OjAw7qQE+QAAACV0RVh0ZGF0ZTptb2RpZnkA
        MjAxMS0wNS0xOFQyMzoxNDowMCswODowMIdGpTMAAABOdEVYdHNvZnR3YXJlAEltYWdlTWFnaWNrIDYu
        OC44LTEwIFExNiB4ODZfNjQgMjAxNS0wNy0xOSBodHRwOi8vd3d3LmltYWdlbWFnaWNrLm9yZwUMnDUA
        AAAYdEVYdFRodW1iOjpEb2N1bWVudDo6UGFnZXMAMaf/uy8AAAAXdEVYdFRodW1iOjpJbWFnZTo6SGVp
        Z2h0ADMyKPT49AAAABZ0RVh0VGh1bWI6OkltYWdlOjpXaWR0aAAzMtBbOHkAAAAZdEVYdFRodW1iOjpN
        aW1ldHlwZQBpbWFnZS9wbmc/slZOAAAAF3RFWHRUaHVtYjo6TVRpbWUAMTMwNTczMTY0MJhYgTAAAAAT
        dEVYdFRodW1iOjpTaXplADEuMTdLQkLU1pG4AAAAWHRFWHRUaHVtYjo6VVJJAGZpbGU6Ly8vaG9tZS93
        d3dyb290L3d3dy5lYXN5aWNvbi5uZXQvY2RuLWltZy5lYXN5aWNvbi5jbi9zcmMvNTIzOS81MjM5NzAu
        cG5n/GaE/gAABD1JREFUSEvFVFtMXFUUPTwarIlNjQkg1s7c970DP6axakxM9MuPYoL++deYFijv1zCd
        Z2GGKRQKMZoUKJRCoViQx8AMAwOU11CoQC0xGn8wKfFDSdP2xzSx9h7XmYIPBkhqm3iTlXPunbP32nvt
        dYaQ//vxzCgESAAOusOmWPec9vxK8oZVUjmpvOyZVZ2eWa2+al57pSr8HAjcrOpZJb5iSj6CpP3nlkyP
        qhe1QOWM9qrnWTs4M6EQ55iSUHFdOeGdV3+o+zaV1q+m0eoFze+eUZPRzX+TyB6USPmgEAMCvuK62li9
        aHpQj+QNq2n6+Vup1DuvDVVOyUmsu6d+rAGJOEeVeGdITq+cVhZqbpoen7+dSgGdoW4llXpm1LA9KB+z
        BeR37CPyuww2tgalI44x6ZArJMU6x6Robse4QhwhJcURkl3uWXXj3DcmWrdi0mtXTBRgq167nErP3tB+
        hzwPPHPq/X/gHvbrldPqhHNMdtlHZZNlWCYo9G8i27CUhMouIPghS46B0si6Hfhey35b3jyz9Y4VcjIJ
        H52ZVG7bAlKGzafGWv2b3ThG5DhI9IkrJC9XzamPaxY1Wn1T04GtNbJHB3pVWKXbgcQUMTpkpWcXNOoa
        V36xDksZzCx/PeYBkViH5TSbX2pHFb/BmtR7IwKdAd6nrpDyE6prso1I9UDDJr7A7AZd4zKkehLDzjpG
        5VsWn6gBTzjcUxwp6BZJaZ9wAB9z7SPSmnsa1SIIATrbY6h+i09ICd59O8Y7o8W5J7Q4nNtnHhQSzQPC
        Rxj+95EYEFRMKrplULSXdG0bekmPQIB4c5/wVvmgOIphPWRBuBMU3fnL+8VkBP7LKaW9ArH4eFLay6eD
        8D7uSuQ8ZhDEt9ejbBUhuSaQ4q+E5LKvRTf03IBD6Gmf5EcyfBOiYhhJ8TUhCeQ+zAAEKkXcWtFV/s1d
        70xJjwgi8cWibuFYWa+wCgwwUiTakaC0R3gBRI1wJMWAqcUnbRRc4d7b81LmtnGkJiyQgk5ORTUfgmB/
        cXc0QVEnTwo6+GQQDGP4FH811NwvruW1c0ef+tZvD8jv4EnZ1USS127MgHx3HejA6pcpZB7JbzceiiIo
        uMyTkk4hJqeVSzh54fD+k43A1rptnxl5NxxAp+no8LvTQxK1B2RWPc1v5xyfNvDRDeRc4khOq/GlvDbO
        Cw1bgIt7oDX/CjdV1M3fw4B165AEe0q0sJNbym0zmoBoglMtRpLVbEzJ7+B+NfeJFJYF2LrzvnxAhMMY
        JAob08Iu/uecFmPGTmaIsGVfNJLMRsNrGNAGCy7vZ4F7AcRIDM3/yLvMrSL+4+OfH47NbNyhekaQ1WRg
        BImQaQnVrBd2CXd2wXphJ38H7vkx55JxNrvZUAFIxxsMsSe+NOxuHtYBZNoHmY5mNRs+QNBeeB+/v5Hd
        ZDj4WY8MafdI/Mx+3SXBn9gxkduWqnxkAAAAAElFTkSuQmCC
</value>
  </data>
</root>