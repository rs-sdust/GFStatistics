<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAACAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZkxKA2pUQwNqVEMDalRDA2pUQwNqVEMDalRDA2pUQwNqV
        EMDalRDA2pUQwNqVEMDalRDA2pUQwNqVEMDalRDA2pUQwNqVEMDalRDA2pUQwNqVEMDalRDA2pUQwNqV
        EMDalRDA2pUQwNqVEMDZkxKAAAAAAAAAAAAAAAAAAAAAANqVEMDblhL/25YS/9uWEv/blhL/25YS/9uW
        Ev/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uWEv/blhL/25YS/9uW
        Ev/blhL/25YS/9uWEv/blhL/25YS/9qVEMAAAAAAAAAAAAAAAAAAAAAA2pUQwNuWEv/Ykw5v1pIMP9aS
        DD/Wkgw/1pIMP9aSDD/Wkgw/1pIMP9aSDD/Wkgw/1pIMP9aSDD/Wkgw/1pIMP9aSDD/Wkgw/1pIMP9aS
        DD/Wkgw/1pIMP9aSDD/Wkgw/1pIMP9aSDD/Wkgw/148QIAAAAAAAAAAAAAAAAAAAAADalRDA25YS/9eT
        EEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANqV
        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
        Ev/blhL/25YS/9mTELAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADalRDA25YS/9eTEEAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADZlBKg25YS/9uWEv/blhL/2ZQSoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANqVEMDblhL/15MQQAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANeTEEDYlBDf25YS/9qUEO/XjxAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2pUQwNuW
        Ev/XkxBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADXjxAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADZkxKA2ZQQv9ePECAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////AAAADwAAAA8/////P////z////8/8///P+H//z/h//844
        ///MP94fzj+MH8//DB/P/4wfz8P+P8/B///Pgf//z4H/x8/B54PP/8ODz//Dx8//w//P/+f/z///H8//
        /g/P//4Pz///H8/////P//////////////8=
</value>
  </data>
</root>